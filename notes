eyeofsauron @time mydraw("xx.png",(-4.1, -32.0, 0.0, 0.0), 7.9, 10000.0, 4000,colorScheme=1,colorFactor=1,colorOffset=70,colorRepetitions=1)
                vv = (v[2],abs(v[1]),-v[3]+0.1,-v[4]-0.2)
                v = v * vv * 0.07 + v + c


radio @time mydraw("xx.png",(-3.3, 0.0, 0.0, 0.0), 5.0, 1000.0, 7600,colorScheme=1,colorFactor=1,colorOffset=70,colorRepetitions=1)
                vtemp = v
                vinv=inv(v)
                if isnan(vinv)
                    vinv=zero(v)
                end
                winv=inv(w)
                if isnan(winv)
                    winv=zero(w)
                end
                v = v * v * 0.07 + vinv * vinv + w + c
                w = w * w * 0.1 + winv * winv * winv - vinv + vtemp + c

alien @time mydraw("xx.png",(-3.9, 0.0, 0.0, 0.0), 1.85, 1000.0, 6800,colorScheme=1,colorFactor=1,colorOffset=70,colorRepetitions=1)
                vtemp = v
                vinv=inv(v)
                if isnan(vinv)
                    vinv=zero(v)
                end
                winv=inv(w)
                if isnan(winv)
                    winv=zero(w)
                end
                v = v * v * 0.4 + vinv * vinv + w + c
                w = w * w * 0.2 + winv * winv * winv- vtemp + c

brain @time mydraw("xx.png",(-0.8, 0.0, 0.0, 0.0), 2.0, 1028.30, 7600,colorScheme=0,colorFactor=1,colorOffset=70,colorRepetitions=1)
                vtemp = v
                vinv=inv(v)
                if isnan(vinv)
                    vinv=zero(v)
                end
                v = v * v + vinv * vinv + w + c
                w = w * w * 0.3 - vtemp + c

rainbow2 @time mydraw("xx.png",(-0.22, 0.0, 0.0, 0.0), 0.42, 10.0, 7600,colorScheme=3,colorFactor=1,colorOffset=70,colorRepetitions=1)

rainbow @time mydraw("xx.png",(-0.22, 0.0, 0.0, 0.0), 0.42, 10.0, 7200,colorScheme=0,colorFactor=1,colorOffset=70,colorRepetitions=1)
                vtemp = v
                v = v * v * 5.0  + w + c
                w = vtemp * vtemp * vtemp - vtemp * vtemp * 0.3 - vtemp + c

cauliflower @time mydraw("xx.png",(-0.2136, 0.0181, 0.0, 0.0), 0.0013, 1000.0, 11000,colorScheme=0,colorFactor=5,colorOffset=70,colorRepetitions=8)
                vtemp = v
                v = v * v * 5.0  + w + c
                w = vtemp * vtemp * vtemp - vtemp * vtemp * 0.3 - vtemp + c

crown @time mydraw("xx.png",(-0.073, 0.0, 0.0, 0.0), 0.047, 1000.0, 5400,colorScheme=0,colorFactor=5,colorOffset=70,colorRepetitions=8)
                vtemp = v
                vinv = inv(v)
                if isnan(vinv)
                    vinv = zero(vinv)
                end
                winv = inv(w)
                if isnan(winv)
                    winv = zero(winv)
                end
                s=v*v+winv
                t=w*w-vinv
                v = s * s * (1.0/2273.0)  + w + c
                w = t * t * t * (1.0/3709.0) + vtemp + c

circle @time mydraw("xx.png",(0.0, 0.0, 0.0, 0.0), 0.8, 500.0, 5000,colorScheme=0,colorFactor=5,colorOffset=70,colorRepetitions=8)
                vtemp = v
                vinv = inv(v)
                if isnan(vinv)
                    vinv = zero(vinv)
                end
                winv = inv(w)
                if isnan(winv)
                    winv = zero(winv)
                end
                v = (winv * winv - v ) * (1.0/19.0)  + w + c
                w = (vinv * vinv + w) * (1.0/31.0) + vtemp + c

water @time mydraw("xx.png",(0.0, 0.0, 0.0, 0.0), 4.7, 1000.0, 8000,colorScheme=0,colorFactor=5,colorOffset=70,colorRepetitions=8)
                vtemp = v
                vinv = inv(v)
                if isnan(vinv)
                    vinv = zero(vinv)
                end
                v = v * v * v * (1.0/117.0) + w + c
                t=vtemp+vinv
                w = t * t * t * (1.0/130.0) + vtemp + c

bubbles @time mydraw("xx.png",(-0.01, 0.1, 0.0, 0.0), 0.05, 1000.0, 4000,colorScheme=0,colorFactor=3,colorOffset=70,colorRepetitions=3)
                vtemp = v
                vinv = inv(v)
                if isnan(vinv)
                    vinv = zero(vinv)
                end
                v = v * v * v * (1.0/5557.0) + w + c
                t=w-vinv
                w = t * t * t * t * (1.0/5531.0) + vtemp + c

snap @time mydraw("xx.png",(-0.75, 0.0, 0.0, 0.0), 0.227, 1000.0, 5300,colorScheme=0,colorFactor=5,colorOffset=70,colorRepetitions=8)
                vtemp = v
                vinv = inv(v)
                if isnan(vinv)
                    vinv = zero(vinv)
                end
                v = v * v * (1.0/23.0) + w + c
                w = vinv * vinv * vinv * (1.0/5.0) + vtemp + c

ring @time mydraw("xx.png",(0.05, 0.0, 0.0, 0.0), 0.33, 1000.0, 5000,colorScheme=0,colorFactor=5,colorOffset=70,colorRepetitions=8)
                vtemp = v
                vinv = inv(v)
                if isnan(vinv)
                    vinv = zero(vinv)
                end
                v = v * v * (1.0/11.0) + w + c
                w = vinv * vinv * vinv * (1.0/37.0) - vtemp + c

eagle @time mydraw("xx.png",(0.17, 0.0, 0.0, 0.0), 0.8, 1000.0, 6700,colorScheme=0,colorFactor=5,colorOffset=70,colorRepetitions=8)
113.141171 seconds (44.90 M allocations: 1.380 GiB, 0.28% gc time)
                vtemp = v
                vinv = inv(v)
                if isnan(vinv)
                    vinv = zero(vinv)
                end
                v = v * v * v * (1.0/8.0) + w + c
                w = w * w + vinv * (1.0/700.0) - vtemp + c

worms @time mydraw("xx.png",(0.04, 0.85, 0.0, 0.0), 0.062, 1000.0, 8000,colorScheme=0,colorFactor=13,colorOffset=70,colorRepetitions=8)
                 vtemp = v
                 vinv = inv(v)
                 if isnan(vinv)
                     vinv = zero(vinv)
                 end
                 v = v * v * v * (1.0/8.0) + w + c
                 w = w * w + vinv * (1.0/61.0) - vtemp + c

nsfw @time mydraw("xx.png",(0.0, 0.0, 0.0, 0.0), 1.0, 1000.0, 8000,colorScheme=0,colorFactor=6,colorOffset=70,colorRepetitions=28)
                 vtemp = v
                 v = v * v * (1.0/4.0) - v * v * v * (1.0/8.0) + w + c
                 w = w * w - vtemp + c

blossom julia> @time mydraw("xx.png",(0.658, 0.3, 0.0, 0.0), 0.092, 1000.0, 5900,colorScheme=0,colorFactor=5,colorOffset=70,colorRepetitions=8)
                 vtemp = v
                 v = (v * v - v * v * v * v) * (1.0/17.0) + w + c
                 w = w * w - vtemp + c

goblet time mydraw("xx.png",(-0.5, 0.0, 0.0, 0.0), 0.25, 1000.0, 7000,colorScheme=0,colorFactor=5,colorOffset=70,colorRepetitions=8)
                 vtemp = v
                 v = (v * v - v * v * v * v) * (1.0/17.0) + w + c
                 w = w * w - vtemp + c

fish @time mydraw("xx.png",(0.0, -0.35, 0.0, 0.0), 2.2, 1000.0, 10000,colorScheme=5,colorFactor=5,colorOffset=70,colorRepetitions=8,turnIt=(0.0,-1.0,0.0,0.0))
                 vtemp = v
                 v = v * v * (1.0/17.0) + w + c
                 w = w * vtemp * (1.0/11.0) - vtemp + c

triangle @time mydraw("xx.png",(-1.76325, 1.0285, 0.0, 0.0), 0.0075, 1000.0, 6600,colorScheme=0,colorFactor=5,colorOffset=70,colorRepetitions=8)
266.011117 seconds (43.57 M allocations: 1.339 GiB, 0.06% gc time)
                 vtemp = v
                 v = v * v * (1.0/73.0) + w + c
                 w = w * w * vtemp * (1.0/7.0) - vtemp + c

shield @time mydraw("xx.png",(-0.2, 0.0, 0.0, 0.0), 0.8, 1000.0, 5100,colorScheme=0,colorFactor=5,colorOffset=70,colorRepetitions=8)
                 vtemp = v
                 v = v * v * (1.0/11.0) + w + c
                 w = w * w * w * (1.0/3.0) - vtemp * 1.02 + c

sieve @time mydraw("xx.png",(-5.15, 0.85, 0.0, 0.0), 0.18, 1000.0, 5600,colorScheme=0,colorFactor=5,colorOffset=70,colorRepetitions=8)
                 vtemp = v
                 v = v * v * (1.0/37.0) + w + c
                 w = w * w * w * (1.0/37.0) - vtemp + c

flames @time mydraw("xx.png",(-7.5, -6.5, 0.0, 0.0), 2.0, 1000.0, 4300,colorScheme=0,colorFactor=5,colorOffset=70,colorRepetitions=3)
                 vtemp = v
                 v = v * v * (1.0/181.0) + w + c
                 w = w * w * w * (1.0/1217.0) - vtemp + c

salad @time mydraw("xx.png",(0.0, 7.0, 0.0, 0.0), 0.45, 1000.0, 5050,colorScheme=0,colorFactor=5,colorOffset=70,colorRepetitions=2)
                 vtemp = v
                 v = v * v * (1.0/1999.0) + w + c
                 w = w * w * w * (1.0/67.0) - vtemp + c

abyss @time mydraw("xx.png",(22.0, 42.3, 0.0, 0.0), 1.0, 1000.0, 8000,colorScheme=0,colorFactor=5,colorOffset=70)
                 vtemp = v
                 v = v * v * (1.0/1999.0) + w + c
                 w = w * w * (1.0/67.0) - vtemp + c

nest @time mydraw("xx.png",(-3.2, 1.94, 0.0, 0.0), 0.25, 1000.0, 5800,colorScheme=0,colorFactor=5,colorOffset=70)
                 vtemp = v
                 v = v * v * (1.0/77783.0) + w + c
                 w = w * w * (1.0/5.0) - vtemp + c

appendix @time mydraw("xx.png",(-0.3985, 0.513, 0.0, 0.0), 0.003, 1000.0, 5900,colorScheme=0,colorFactor=4,colorOffset=70)
                 vtemp = v
                 v = v * v * (1.0/7.0) + w + c
                 w = w * w * w * (1.0/43.0) + vtemp + c

chain @time mydraw("xx.png",(0.013, 0.028, 0.0, 0.0), 0.004, 1000.0, 9000,colorScheme=0,colorFactor=4,colorOffset=70)
                 vtemp = v
                 v = v * v * (1.0/2.0) + w + c
                 w = w * w * w * (1.0/743.0) + vtemp + c

camel @time mydraw("xx.png",(0.0455, 0.018, 0.0, 0.0), 0.0045, 1000.0, 7200,colorScheme=0,colorFactor=4,colorOffset=70)
                 vtemp = v
                 v = v * v * (1.0/13.0) + w + c
                 w = w * w * (1.0/11.0) + vtemp + c

star @time mydraw("xx.png",(0.0, 0.0, 0.0, 0.0), 4.0, 1000.0, 6500,colorScheme=0,colorFactor=5,colorOffset=80)
                 vtemp = v
+                v = v * v * (1.0/77.0) + w + c
+                w = w * w * (1.0/5.0) - vtemp + c
                 vold = vtemp

bow @time mydraw("xx.png",(0.2805, 0.0585, 0.0, 0.0), 0.0014, 1000.0, 9000,colorScheme=0,colorFactor=3,colorOffset=50)
             v=zero(c)
-            o=one(c)
+            w=zero(c)
             vold = v
             while true
-                if norm(v)>=limit
+                if norm(v)+norm(w)>=limit

+                v = v * v + w + c
+                w = w * w - vtemp + c
                 vold = vtemp

maelstrom @time mydraw("xx.png",(0.471, 1.08, 0.0, 0.0), 0.047, 1000.0, 10000,colorScheme=0,colorFactor=6,colorOffset=80)
+                # exp x
+                v = o + v + vv * (1.0/2.0) + vvv * (1.0/6.0) +
+                    vvvv * (1.0/24.0) + v * vvvv * (1.0/120.0) +
+                    vvvvvv * (1.0/720.0) + v * vvvvvv * (1.0/5040.0) +
+                    vv * vvvvvv * (1.0/40320.0) +
+                    vvv * vvvvvv * (1.0/362880.0) + c

rose: @time mydraw("xx.png",(2.06, 1.03, 0.0, 0.0), 0.06, 1000.0, 5000,colorScheme=3,colorFactor=5,colorOffset=80)
+                v = v - vvv * (1.0/6.0) + v * vvvv * (1.0/120.0) -
+                    vvv * vvvv * (1.0/5040.0) +
+                    vvv * vvvvvv * (1.0/362880.0) -
+                    v * vvvv * vvvvvv * (1.0/39916800.0) +
+                    v * vvvvvv * vvvvvv * (1.0/6227020800.0) + c
                 vold = vtemp

hook @time mydraw("xx.png",(0.94, 0.2835, 0.0, 0.0), 0.0035, 1000.0, 6700,colorScheme=0,colorFactor=5,colorOffset=90)

black hole: @time mydraw("xx.png",(-0.0497, 0.3381, 0.0, 0.0), 0.0003, 1000.0, 8000,colorScheme=0,colorFactor=5,colorOffset=90)

spider: @time mydraw("xx.png",(2.021, 4.919, 0.0, 0.0), 0.002, 1000.0, 10000,colorScheme=0,colorFactor=5,colorOffset=90)
                 vvvvvv = vv * vvvv
		 # ln x
+                v = v - vv * (1.0/2.0) + vvv * (1.0/3.0) - vvvv * (1.0/4.0) +
+                    v * vvvv * (1.0/5.0) - vvvvvv * (1.0/6.0) +
+                    v * vvvvvv * (1.0/7.0) - vv * vvvvvv * (1.0/8.0) + c
+                vv = v * v
+                vvv = vv * v
+                vvvv = vv * vv
+                vvvvvv = vv * vvvv
+                
                 v = v + vvv * (1.0/6.0) +
                     vv * vvv * (1.0/120.0) +
-                    vvv * vvvv * (1.0/5040.0) + vvv * vvvvvv * (1.0/362880.0) + c
+                    vvv * vvvv * (1.0/5040.0) +
+                    vvv * vvvvvv * (1.0/362880.0) + c
                 vold = vtemp

heart: @time mydraw("xx.png",(-1.2, -2.3, 0.0, 0.0), 0.018, 1000.0, 8000,colorScheme=0,colorFactor=5,colorOffset=90)
                 vvvvvv = vv * vvvv
-                v = v + vvv * (1.0/3.0) +
-                    vv * vvv * (2.0/15.0) +
-                    vvv * vvvv * (17.0/315.0) + vvv * vvvvvv * (62.0/2835.0) + c
+                v = v + vvv * (1.0/6.0) +
+                    vv * vvv * (1.0/120.0) +
+                    vvv * vvvv * (1.0/5040.0) + vvv * vvvvvv * (1.0/362880.0) + c
                 vold = vtemp

tan: @time mydraw("xx.png",(0.253, -0.59, 0.0, 0.0), 0.007, 1000.0, 7000,colorScheme=0,colorFactor=5,colorOffset=90)
                 vtemp = v
                 vv = v * v
+                vvv = vv * v
                 vvvv = vv * vv
                 vvvvvv = vv * vvvv
-                v = o + v - vv * (1.0/2.0) - v * vv * (1.0/6.0) + vvvv * (1.0/24.0) +
-                    v * vvvv * (1.0/120.0) - vvvvvv * (1.0/720.0) -
-                    v * vvvvvv * (1.0/5040.0) + vvvv * vvvv * (1.0/40320.0) + c
+                v = v + vvv * (1.0/3.0) +
+                    vv * vvv * (2.0/15.0) +
+                    vvv * vvvv * (17.0/315.0) + vvv * vvvvvv * (62.0/2835.0) + c
                 vold = vtemp
smooth: @time mydraw("xx.png",(3.7, 0.47, 0.0, 0.0), 0.1, 1000.0, 8000,colorScheme=0,colorFactor=5,colorOffset=90)
+            o=one(c)

                 vvvv = vv * vv
-                v = v - v * vv * (1.0/6.0) + v * vvvv * (1.0/120.0) - v * vv* vvvv * (1.0/5040.0) + c
+                vvvvvv = vv * vvvv
+                v = o + v - vv * (1.0/2.0) - v * vv * (1.0/6.0) + vvvv * (1.0/24.0) +
+                    v * vvvv * (1.0/120.0) - vvvvvv * (1.0/720.0) -
+                    v * vvvvvv * (1.0/5040.0) + vvvv * vvvv * (1.0/40320.0) + c
                 vold = vtemp

fly: @time mydraw("xx.png",(-2.39,1.22,0.0,0.0), 0.11, 1000.0, 8000,colorScheme=0,colorFactor=5,colorOffset=90)
151.525771 seconds (64.00 M allocations: 1.967 GiB, 0.26% gc time)
                 vtemp = v
		 # sinus
-                v = v * v * v * v * v  + c
+                vv = v * v
+                vvvv = vv * vv
+                v = v - v * vv * (1.0/6.0) + v * vvvv * (1.0/120.0) - v * vv* vvvv * (1.0/5040.0) + c
                 vold = vtemp

norman: @time mydraw("xx.png",(-0.701,0.433,0.0,0.0), 0.012, 1000.0, 7200,colorScheme=2,colorFactor=5,colorOffset=90)
        @time mydraw("xx.png",(-0.701,0.433,0.0,0.0), 0.012, 1000.0, 7200,colorScheme=2,colorFactor=5,colorOffset=50)
                 vtemp = v
-                v = v * v * v + (n%2==1 ? 2.0 : -1.0) * v * v + c
+                v = v * v * v * v * v  + c
                 vold = vtemp
caffrey: @time mydraw("xx.png",(0.5057,0.1926,0.0,0.0), 0.0008, 1000.0, 3650,colorScheme=2,colorFactor=1)
                 vtemp = v
-                v = 4.0 * v * v * v * v + v * v * v + c
+                v = v * v * v + (n%2==1 ? 2.0 : -1.0) * v * v + c
                 vold = vtemp


neal: @time mydraw("xx.png",(0.3575,0.464,0.0,0.0), 0.0007, 1000.0, 5000,colorScheme=1,colorFactor=1)
                 vtemp = v
-                v = 0.03 * v * v * v + c
+                v = 4.0 * v * v * v * v + v * v * v + c
                 vold = vtemp

cube: @time mydraw("xx.png",(-3.09,1.0257,0.0,0.0), 0.021, 1000.0, 5600,colorScheme=0,colorFactor=2)
                 vtemp = v
-                v = v * v + convert(Float64, n%3 -1)*vold + c
+                v = 0.03 * v * v * v + c
                 vold = vtemp

pink7: @time mydraw("xx.png",(-1.3939,0.0294,0.0,0.0), 0.0032, 1000.0, 5200,colorScheme=1,colorFactor=2)
                vtemp = v
                v = v * v + convert(Float64, n%3 -1)*vold + c
                vold = vtemp

Maelstrom2: @time mydraw("xx.png",(-1.159,0.478,-0.19,0.29), 0.007, 1000.0, 4100,colorScheme=0,colorFactor=5)
Maelstrom: @time mydraw("xx.png",(-1.159,0.59,0.0,0.0), 0.007, 1000.0, 4100,colorScheme=0,colorFactor=3)

Waves: @time mydraw("xx.png",(-3.13,0.31,1.0,0.0), 0.05, 1000.0, 8000)
                 n += 1
                 vtemp = v
-                v = v * v + convert(Float64, n%3 -1)*vold + c
+                v = 0.07 * v * v + 2.3 * w + c
+                w = 0.05 * w * w - 0.3 * vtemp + c
                 vold = vtemp

blue77: time mydraw("xx.png",(-0.16635,0.4700,0.01,-0.015), 0.0008, 1000.0, 7000,colorScheme=2)
blue7: time mydraw("xx.png",(-0.16635,0.4703,0.01,-0.015), 0.0005, 1000.0, 7000,colorScheme=2)

pink  @time mydraw("xx.png",(-0.162,0.465,0.0,0.0), 0.013, 1000.0, 6500,colorScheme=1)
                 vtemp = v
-                v = 0.07 * v * v + 2.3 * w + c
-                w = 0.07 * w * w - 0.3 * vtemp + c
+                v = v * v + convert(Float64, n%3 -1)*vold + c
                 vold = vtemp


video: onevect=(1.0,0.0,0.0,0.0)
       basevect=(0.001,-0.001,0.003,-0.005)
       for iii in 1:300
       fn="xx_$(iii).png"
       println(iii)
       mydraw(fn,(-0.22743,-0.9737,0.2,-1.5), 0.002, 1000.0, 1000,turnIt=onevect+3.0*(1.0-(iii+100)/400.0)*basevect)
       end
       ffmpeg -i xx_%d.png -framerate 35 ../shared/test.avi
       ffmpeg -i xx_%d.png -c:v libx264 -b:v 6000k -pass 2 -vf scale=600:600 -b:a 128k output.mp4


flow: @time mydraw("xx.png",(-0.22743,-0.9737,0.2,-1.5), 0.002, 1000.0, 5900)
swirl3: @time mydraw("xx.png",(-0.2,-1.0,0.2,-1.5), 0.033, 1000.0, 3300)
swirl2: @time mydraw("xx.png",(-1.3,-1.1,0.0,0.0), 0.15, 1000.0, 7800;turnIt=(0.0,-1.0,1.0,0.0))
                vtemp = v
                v = 0.07 * v * v + 2.3 * w + c
                w = 0.07 * w * w - 0.3 * vtemp + c
                vold = vtemp


swirl: @time mydraw("xx.png",(-0.2881, 1.425, 0.0, 0.0), 0.05, 1000.0, 5700)
   git tag swirl
                vtemp = v
                v = 0.07 * v * v + 2.3 * w + c
                w = 0.05 * w * w - 0.3 * vtemp + c
                vold = vtemp
bird: time mydraw("xx.png",0.0008, -0.3, -0.0014, 0.0008, 0.9, 10000.0, 8000)
   git tag bird
snap:time mydraw("xx.png",0.023, 0.009, 0.0, 0.0, 0.003, 10000.0, 8000)
butterfly: time mydraw("xx.png",0.01, 0.0, 0.0, 0.0, 0.06, 10000.0, 8000)
   git tag butterfly   
dark: @time mydraw("xx.png",0.435, 0.182, 0.0, 0.0, 0.03, 1000.0, 8000)
   git tag dark
blue5: @time mydraw("xx.png",0.2835, 0.06, 0.0, 0.0, 0.013, 1000.0, 8000)
   git tag blue
green4: mydraw("green4.png",-0.035, 0.0, -0.01, 0.01, 0.08, 1000.0, 5000)
   git tag green3
green3: mydraw("green3.png",0.275, 0.05, 0.0, 0.0, 0.03, 1000.0, 5000)
   git tag green3
green2: mydraw("green2.png",-0.005,0.017, -0.005, 0.015, 0.01, 100.0, 3000)
   git tag green
green: mydraw("green.png",0.0,0.0, 0.0, 0.0, 0.05, 100.0,3000)
   git tag green


idea 1
# i*j == k, j*k == i, k*i == j, i*i==-j, j*j==-k, k*k==-i
#(i*x1+j*x2+k*x3)*(i*y1+j*y2+k*y3)
# == i*i*x1*y1+i*j*(x1*y2+x2*y1)+i*k*(x1*y3+x3*y1)+j*j*x2*y2+j*k*(x2*y3+x3*y2)+k*k*x3*y3
# == i*i*x1*y1+k*(x1*y2+x2*y1)+j*(x1*y3+x3*y1)+j*j*x2*y2+i*(x2*y3+x3*y2)+k*k*x3*y3
# == -j*x1*y1+k*(x1*y2+x2*y1)+j*(x1*y3+x3*y1)-k*x2*y2+i*(x2*y3+x3*y2)-i*x3*y3
# == i*(x2*y3+x3*y2-x3*y3)+j*(x1*y3+x3*y1-x1*y1)+k*(x1*y2+x2*y1-x2*y2)

grows too quickly


# i*j == -k, j*k == -i, k*i == -j

i*j*j*k*k*i==(-k) * (-i) * (-j) == -i*j*k

?? i*j*k == -1 (case 1)
?? i==j==k==0.0 (case 2)

(i*i)*(j*j)*(k*k) == -i*j*k

_____________

(x1+i*x2)*(y1+i*y2)==(x1*y1-x2*y2)+i*(x2*y1+x1*y2)

_____________
# i*j == k, j*k == i, k*i == j, i*i==-2*j, j*j==-2*k, k*k==-2*i
#(i*x1+j*x2+k*x3)*(i*y1+j*y2+k*y3)
# == i*i*x1*y1+i*j*(x1*y2+x2*y1)+i*k*(x1*y3+x3*y1)+j*j*x2*y2+j*k*(x2*y3+x3*y2)+k*k*x3*y3
# == i*i*x1*y1+k*(x1*y2+x2*y1)+j*(x1*y3+x3*y1)+j*j*x2*y2+i*(x2*y3+x3*y2)+k*k*x3*y3
# == -2*j*x1*y1+k*(x1*y2+x2*y1)+j*(x1*y3+x3*y1)-2*k*x2*y2+i*(x2*y3+x3*y2)-2*i*x3*y3
# == i*(x2*y3+x3*y2-2*x3*y3)+j*(x1*y3+x3*y1-2*x1*y1)+k*(x1*y2+x2*y1-2*x2*y2)


i,j,k,l
i*i = j*j = k*k = -1
i j = k, 	j k = i, 	k i = j
j i = -k,	k j = -i, 	i k = -j


#(x1+i*x2+j*x3+k*x4)*(y1+i*y2+j*y3+k*y4)
# == (x1*y1 + (x2*y1 + x1*y2) * i + (x1*y3 + x3*y1) * j
#   + (x1*y4 + x4*y1) * k
# + (x2*y3) * i*j + x3*y2*j*i + x2*y4*i*k + x4*y2*k*i
# + x3*y4*j*k + x4*y3*k*j + x2*y2*i*i + x3*x3*j*j + x4*y4*k*k

# == (x1*y1 - x2*y2 - x3*x3 - x4*y4)
#  + (x2*y1 + x1*y2 + x3*y4 - x4*y3) * i + (x1*y3 + x3*y1 - x2*y4 + x4*y2) * j
#  + (x1*y4 + x4*y1 + x2*y3 - x3*y2) * k
# 


# i*j == -k, j*k == -l, k*l == -i, l*i == -j; i*i==-l; j*j == -i , k*k== -j, l*l== -k
# i*j*k*l==i*k

#(i*x1+j*x2+k*x3+l*x4)*(i*y1+j*y2+k*y3+l*y4)
# == i*i*x1*y1+i*j*(x1*y2+x2*y1)+i*k*(x1*y3+x3*y1)+i*l*(x1*y4+x4*y1)
#+j*j*x2*y2+j*k*(x2*y3+x3*y2)+j*l*(x2*y4+x4*y2)
# +k*k*x3*y3+k*l*(x3*y4+x4*y3)
# +l*l*x4*y4
# == -l*x1*y1-k*(x1*y2+x2*y1)+i*k*(x1*y3+x3*y1)+i*l*(x1*y4+x4*y1)
#-i*x2*y2-l*(x2*y3+x3*y2)+j*l*(x2*y4+x4*y2)
# -j*x3*y3-i*(x3*y4+x4*y3)
# -k*x4*y4

https://www.math.toronto.edu/mathnet/questionCorner/hypercomplex.html
# i*i==j*j==k*k==i*j*k==-1
#(x1+i*x2+j*x3+k*x4)*(y1+i*y2+j*y3+k*y4)
# == x1*y1+ i*(x2*y1+x1*y2)+j*(x3*y1+x1*y3)+k*(x1*y4+x4*y1)
#  + i*j*(x2*y3+x3*y2)+ i*k*(x2*y4+x4*y2) + j*k*(x3*y4+x4*y3)
#  -x2*y2-x3*y3-x4*y4
# == (x1*y1-x2*y2-x3*y3-x4*y4) + i*(x2*y1+x1*y2+x3*y4+x4*y3)
# + j*(x3*y1+x1*y3+x2*y4+x4*y2) + k*(x1*y4+x4*y1+x2*y3+x3*y2) 
